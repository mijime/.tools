#!/bin/bash

declare \
  stack= \
  stack_opts= \
  stack_output= \
  template_body= \
  parameters=

while [[ $# -gt 0 ]]
do
  case $1 in
    -o|--stack-output)
      stack_output=$2
      shift 2 || break
      ;;
    -s|--stack-name)
      stack=$2
      shift 2 || break
      ;;
    -t|--template-body)
      template_body=$2
      shift 2 || break
      ;;
    -p|--parameters)
      parameters=$2
      shift 2 || break
      ;;
    *)
      stack_opts="${stack_opts} $1"
      shift || break
      ;;
  esac
done

aws cloudformation create-stack \
  ${stack_opts} \
  --stack-name "${stack}" \
  --template-body "${template_body}" \
  --parameters "${parameters}" \
  --capabilities CAPABILITY_IAM \
  --on-failure DELETE \
  || \

  aws cloudformation update-stack \
  ${stack_opts} \
  --stack-name "${stack}" \
  --template-body "${template_body}" \
  --parameters "${parameters}" \
  --capabilities CAPABILITY_IAM \
  || \

  true

for x in 1 2 4 8 16 32 64 128 256 512
do
  sleep $x
  aws cloudformation describe-stacks \
    ${stack_opts} \
    --stack-name "${stack}" \
    --query "Stacks[].StackStatus" \
    --output text \
    > "${stack_output}.st" || exit 1
  cat "${stack_output}.st" | sed "s/^/$(date +'[%F %H:%M:%S %z]') /g"
  grep -c "COMPLETE$" "${stack_output}.st" > /dev/null && break
done

aws cloudformation describe-stacks \
  ${stack_opts} \
  --stack-name "${stack}" \
  --query "Stacks[].Outputs[]" \
  --output text \
  > "${stack_output}"
